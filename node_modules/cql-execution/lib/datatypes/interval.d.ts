import { Quantity } from './quantity';
export declare class Interval {
    low: any;
    high: any;
    lowClosed?: boolean | null | undefined;
    highClosed?: boolean | null | undefined;
    defaultPointType?: any;
    constructor(low: any, high: any, lowClosed?: boolean | null | undefined, highClosed?: boolean | null | undefined, defaultPointType?: any);
    get isInterval(): boolean;
    get pointType(): any;
    copy(): Interval;
    contains(item: any, precision?: any): boolean | null;
    properlyIncludes(other: any, precision?: any): boolean | null;
    includes(other: any, precision?: any): boolean | null;
    includedIn(other: any, precision?: any): any;
    overlaps(item: any, precision?: any): boolean | null;
    overlapsAfter(item: any, precision?: any): boolean | null;
    overlapsBefore(item: any, precision?: any): boolean | null;
    union(other: any): Interval | null;
    intersect(other: any): Interval | null;
    except(other: any): Interval | null;
    sameAs(other: any, precision?: any): any;
    sameOrBefore(other: any, precision?: any): any;
    sameOrAfter(other: any, precision?: any): any;
    equals(other: any): boolean | null;
    after(other: any, precision?: any): any;
    before(other: any, precision?: any): any;
    meets(other: any, precision?: any): boolean | null;
    meetsAfter(other: any, precision?: any): any;
    meetsBefore(other: any, precision?: any): any;
    start(): any;
    end(): any;
    starts(other: any, precision?: any): any;
    ends(other: any, precision?: any): any;
    width(): number | Quantity | null;
    size(): number | Quantity | null;
    getPointSize(): any;
    toClosed(): Interval;
    toString(): string;
}
